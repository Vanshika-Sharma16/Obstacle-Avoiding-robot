#define trigPin A3
#define echoPin A2
#define trigPin2 A5
#define echoPin2 A4
#define trigPin3 A1
#define echoPin3 A0
#define in1 10
#define in2 9
#define in4 7
#define in3 8
int ena=11;
int enb=6;
long distance, duration,distance2,duration2,distance3,duration3;
void setup() {
  pinMode(trigPin,OUTPUT);
  pinMode(echoPin,INPUT);
  pinMode(trigPin2,OUTPUT);
  pinMode(echoPin2,INPUT);
  pinMode(trigPin3,OUTPUT);
  pinMode(echoPin3,INPUT);
  pinMode(in1,OUTPUT);
  pinMode(in2,OUTPUT);
  pinMode(in3,OUTPUT);
  pinMode(in4,OUTPUT);
  pinMode(ena,OUTPUT);
  pinMode(enb,OUTPUT);
  // put your setup code here, to run once:

}

void loop() {
  analogWrite(ena,200);
  analogWrite(enb,187);
  digitalWrite(trigPin,LOW);
delayMicroseconds(2);
digitalWrite(trigPin,HIGH);
delayMicroseconds(10);
digitalWrite(trigPin,LOW);

duration=pulseIn(echoPin,HIGH);

distance=duration*0.017;
delayMicroseconds(2);
digitalWrite(trigPin2,HIGH);
delayMicroseconds(10);
digitalWrite(trigPin2,LOW);

duration2=pulseIn(echoPin2,HIGH);

distance2=duration2*0.017;
delayMicroseconds(2);
digitalWrite(trigPin3,HIGH);
delayMicroseconds(10);
digitalWrite(trigPin3,LOW);

duration3=pulseIn(echoPin3,HIGH);

distance3=duration3*0.017;
if(distance>30&&distance2>10&&distance3>10)
{
  forward();
}
else if(distance<30&&distance2>10&&distance3<10)
{
  left();
  
}
else if(distance<30&&distance2<10&&distance3>10)
{
  right();
  
}
else if(distance<30&&distance2>10&&distance3>10&&distance3>distance2)

{
  right();
  
}
else if(distance<30&&distance2>10&&distance3>10&&distance3<distance2)
{
  left();
  
}
else if(distance>30&&distance2<10&&distance3>10)
{
  stop_m();
  delay(300);
  right();
  delay(150);
}
else if(distance>30&&distance2>10&&distance3<10)
{
  stop_m();
  delay(300);
  left();
  delay(150);
}
else if(distance>30&&distance2<10&&distance3<10&&distance>distance2&&distance>distance3)
{
  forward();
  delay(500);
}

else
{
  backward();
  delay(500);
  
  
}
}
  



void forward()
{
  digitalWrite(in1,HIGH);
  digitalWrite(in2,LOW);
  digitalWrite(in3,HIGH);
  digitalWrite(in4,LOW);
  
}
void  stop_m()
{
  digitalWrite(in1,LOW);
  digitalWrite(in2,LOW);
  digitalWrite(in3,LOW);
  digitalWrite(in4,LOW);
  
}
void left()
{
  analogWrite(ena,255);
  analogWrite(enb,255);
  delayMicroseconds(2);
  digitalWrite(in1,HIGH);
  digitalWrite(in2,LOW);
  digitalWrite(in3,LOW);
  digitalWrite(in4,HIGH);
  
}
void right()
{
  analogWrite(ena,255);
  analogWrite(enb,255);
  delayMicroseconds(2);
  digitalWrite(in1,LOW);
  digitalWrite(in2,HIGH);
  digitalWrite(in3,HIGH);
  digitalWrite(in4,LOW);
}
void backward()
{
  delayMicroseconds(2);
  digitalWrite(in1,LOW);
  digitalWrite(in2,HIGH);
  digitalWrite(in3,LOW);
  digitalWrite(in4,HIGH);
}
